{"id":"Q40o","dependencies":[{"name":"/home/gz/dev/java/mmath/hypetrain-web/src/main/web/package.json","includedInParent":true,"mtime":1561125342641},{"name":"/home/gz/dev/java/mmath/hypetrain-web/src/main/web/.babelrc","includedInParent":true,"mtime":1561125342637},{"name":"/home/gz/dev/java/mmath/hypetrain-web/src/main/web/node_modules/fbjs/package.json","includedInParent":true,"mtime":1561181500359}],"generated":{"js":"\"use strict\";var e=/([A-Z])/g;function r(r){return r.replace(e,\"-$1\").toLowerCase()}module.exports=r;","map":{"mappings":[{"source":"../node_modules/fbjs/lib/hyphenate.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/fbjs/lib/hyphenate.js","original":{"line":12,"column":0},"generated":{"line":1,"column":13}},{"source":"../node_modules/fbjs/lib/hyphenate.js","original":{"line":12,"column":0},"generated":{"line":1,"column":17}},{"source":"../node_modules/fbjs/lib/hyphenate.js","original":{"line":12,"column":0},"generated":{"line":1,"column":19}},{"source":"../node_modules/fbjs/lib/hyphenate.js","original":{"line":26,"column":0},"generated":{"line":1,"column":30}},{"source":"../node_modules/fbjs/lib/hyphenate.js","original":{"line":26,"column":0},"generated":{"line":1,"column":39}},{"source":"../node_modules/fbjs/lib/hyphenate.js","original":{"line":26,"column":0},"generated":{"line":1,"column":41}},{"source":"../node_modules/fbjs/lib/hyphenate.js","original":{"line":27,"column":0},"generated":{"line":1,"column":44}},{"source":"../node_modules/fbjs/lib/hyphenate.js","original":{"line":27,"column":0},"generated":{"line":1,"column":51}},{"source":"../node_modules/fbjs/lib/hyphenate.js","original":{"line":27,"column":0},"generated":{"line":1,"column":53}},{"source":"../node_modules/fbjs/lib/hyphenate.js","original":{"line":27,"column":0},"generated":{"line":1,"column":61}},{"source":"../node_modules/fbjs/lib/hyphenate.js","original":{"line":27,"column":0},"generated":{"line":1,"column":63}},{"source":"../node_modules/fbjs/lib/hyphenate.js","original":{"line":27,"column":0},"generated":{"line":1,"column":70}},{"source":"../node_modules/fbjs/lib/hyphenate.js","original":{"line":30,"column":0},"generated":{"line":1,"column":84}},{"source":"../node_modules/fbjs/lib/hyphenate.js","original":{"line":30,"column":0},"generated":{"line":1,"column":91}},{"source":"../node_modules/fbjs/lib/hyphenate.js","original":{"line":30,"column":0},"generated":{"line":1,"column":99}}],"sources":{"../node_modules/fbjs/lib/hyphenate.js":"'use strict';\n\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @typechecks\n */\n\nvar _uppercasePattern = /([A-Z])/g;\n\n/**\n * Hyphenates a camelcased string, for example:\n *\n *   > hyphenate('backgroundColor')\n *   < \"background-color\"\n *\n * For CSS style names, use `hyphenateStyleName` instead which works properly\n * with all vendor prefixes, including `ms`.\n *\n * @param {string} string\n * @return {string}\n */\nfunction hyphenate(string) {\n  return string.replace(_uppercasePattern, '-$1').toLowerCase();\n}\n\nmodule.exports = hyphenate;"},"lineCount":null}},"hash":"830ed3dfeab5ede9790def91456b8dde","cacheData":{"env":{}}}