{"id":"R6xY","dependencies":[{"name":"/home/gz/dev/java/mmath/hypetrain-web/src/main/web/package.json","includedInParent":true,"mtime":1561125342641},{"name":"/home/gz/dev/java/mmath/hypetrain-web/src/main/web/.babelrc","includedInParent":true,"mtime":1561125342637},{"name":"/home/gz/dev/java/mmath/hypetrain-web/src/main/web/node_modules/fbjs/package.json","includedInParent":true,"mtime":1561181500359},{"name":"./hyphenate","loc":{"line":12,"column":24},"parent":"/home/gz/dev/java/mmath/hypetrain-web/src/main/web/node_modules/fbjs/lib/hyphenateStyleName.js","resolved":"/home/gz/dev/java/mmath/hypetrain-web/src/main/web/node_modules/fbjs/lib/hyphenate.js"}],"generated":{"js":"\"use strict\";var e=require(\"./hyphenate\"),r=/^ms-/;function t(t){return e(t).replace(r,\"-ms-\")}module.exports=t;","map":{"mappings":[{"source":"../node_modules/fbjs/lib/hyphenateStyleName.js","original":{"line":10,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/fbjs/lib/hyphenateStyleName.js","original":{"line":12,"column":0},"generated":{"line":1,"column":13}},{"source":"../node_modules/fbjs/lib/hyphenateStyleName.js","original":{"line":12,"column":0},"generated":{"line":1,"column":17}},{"source":"../node_modules/fbjs/lib/hyphenateStyleName.js","original":{"line":12,"column":0},"generated":{"line":1,"column":19}},{"source":"../node_modules/fbjs/lib/hyphenateStyleName.js","original":{"line":12,"column":0},"generated":{"line":1,"column":27}},{"source":"../node_modules/fbjs/lib/hyphenateStyleName.js","original":{"line":14,"column":0},"generated":{"line":1,"column":42}},{"source":"../node_modules/fbjs/lib/hyphenateStyleName.js","original":{"line":14,"column":0},"generated":{"line":1,"column":44}},{"source":"../node_modules/fbjs/lib/hyphenateStyleName.js","original":{"line":32,"column":0},"generated":{"line":1,"column":51}},{"source":"../node_modules/fbjs/lib/hyphenateStyleName.js","original":{"line":32,"column":0},"generated":{"line":1,"column":60}},{"source":"../node_modules/fbjs/lib/hyphenateStyleName.js","original":{"line":32,"column":0},"generated":{"line":1,"column":62}},{"source":"../node_modules/fbjs/lib/hyphenateStyleName.js","original":{"line":33,"column":0},"generated":{"line":1,"column":65}},{"source":"../node_modules/fbjs/lib/hyphenateStyleName.js","original":{"line":33,"column":0},"generated":{"line":1,"column":72}},{"source":"../node_modules/fbjs/lib/hyphenateStyleName.js","original":{"line":33,"column":0},"generated":{"line":1,"column":74}},{"source":"../node_modules/fbjs/lib/hyphenateStyleName.js","original":{"line":33,"column":0},"generated":{"line":1,"column":77}},{"source":"../node_modules/fbjs/lib/hyphenateStyleName.js","original":{"line":33,"column":0},"generated":{"line":1,"column":85}},{"source":"../node_modules/fbjs/lib/hyphenateStyleName.js","original":{"line":33,"column":0},"generated":{"line":1,"column":87}},{"source":"../node_modules/fbjs/lib/hyphenateStyleName.js","original":{"line":36,"column":0},"generated":{"line":1,"column":95}},{"source":"../node_modules/fbjs/lib/hyphenateStyleName.js","original":{"line":36,"column":0},"generated":{"line":1,"column":102}},{"source":"../node_modules/fbjs/lib/hyphenateStyleName.js","original":{"line":36,"column":0},"generated":{"line":1,"column":110}}],"sources":{"../node_modules/fbjs/lib/hyphenateStyleName.js":"/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @typechecks\n */\n\n'use strict';\n\nvar hyphenate = require('./hyphenate');\n\nvar msPattern = /^ms-/;\n\n/**\n * Hyphenates a camelcased CSS property name, for example:\n *\n *   > hyphenateStyleName('backgroundColor')\n *   < \"background-color\"\n *   > hyphenateStyleName('MozTransition')\n *   < \"-moz-transition\"\n *   > hyphenateStyleName('msTransition')\n *   < \"-ms-transition\"\n *\n * As Modernizr suggests (http://modernizr.com/docs/#prefixed), an `ms` prefix\n * is converted to `-ms-`.\n *\n * @param {string} string\n * @return {string}\n */\nfunction hyphenateStyleName(string) {\n  return hyphenate(string).replace(msPattern, '-ms-');\n}\n\nmodule.exports = hyphenateStyleName;"},"lineCount":null}},"hash":"0e7ef80d9d9d5798746af50952939ba0","cacheData":{"env":{}}}