/*
 * This file is generated by jOOQ.
 */
package com.ftpix.mmath.dsl.tables.records;


import com.ftpix.mmath.dsl.tables.HypeTrains;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record2;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.11"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class HypeTrainsRecord extends UpdatableRecordImpl<HypeTrainsRecord> implements Record4<String, String, Long, Byte> {

    private static final long serialVersionUID = 1181301551;

    /**
     * Setter for <code>mmath.hype_trains.user</code>.
     */
    public void setUser(String value) {
        set(0, value);
    }

    /**
     * Getter for <code>mmath.hype_trains.user</code>.
     */
    public String getUser() {
        return (String) get(0);
    }

    /**
     * Setter for <code>mmath.hype_trains.fighter</code>.
     */
    public void setFighter(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>mmath.hype_trains.fighter</code>.
     */
    public String getFighter() {
        return (String) get(1);
    }

    /**
     * Setter for <code>mmath.hype_trains.nextFight</code>.
     */
    public void setNextfight(Long value) {
        set(2, value);
    }

    /**
     * Getter for <code>mmath.hype_trains.nextFight</code>.
     */
    public Long getNextfight() {
        return (Long) get(2);
    }

    /**
     * Setter for <code>mmath.hype_trains.notified</code>.
     */
    public void setNotified(Byte value) {
        set(3, value);
    }

    /**
     * Getter for <code>mmath.hype_trains.notified</code>.
     */
    public Byte getNotified() {
        return (Byte) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record2<String, String> key() {
        return (Record2) super.key();
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row4<String, String, Long, Byte> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row4<String, String, Long, Byte> valuesRow() {
        return (Row4) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field1() {
        return HypeTrains.HYPE_TRAINS.USER;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return HypeTrains.HYPE_TRAINS.FIGHTER;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field3() {
        return HypeTrains.HYPE_TRAINS.NEXTFIGHT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Byte> field4() {
        return HypeTrains.HYPE_TRAINS.NOTIFIED;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component1() {
        return getUser();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component2() {
        return getFighter();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long component3() {
        return getNextfight();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Byte component4() {
        return getNotified();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value1() {
        return getUser();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getFighter();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value3() {
        return getNextfight();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Byte value4() {
        return getNotified();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public HypeTrainsRecord value1(String value) {
        setUser(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public HypeTrainsRecord value2(String value) {
        setFighter(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public HypeTrainsRecord value3(Long value) {
        setNextfight(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public HypeTrainsRecord value4(Byte value) {
        setNotified(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public HypeTrainsRecord values(String value1, String value2, Long value3, Byte value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached HypeTrainsRecord
     */
    public HypeTrainsRecord() {
        super(HypeTrains.HYPE_TRAINS);
    }

    /**
     * Create a detached, initialised HypeTrainsRecord
     */
    public HypeTrainsRecord(String user, String fighter, Long nextfight, Byte notified) {
        super(HypeTrains.HYPE_TRAINS);

        set(0, user);
        set(1, fighter);
        set(2, nextfight);
        set(3, notified);
    }
}
