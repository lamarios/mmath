<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <parent>
        <artifactId>mmath</artifactId>
        <groupId>com.ftpix</groupId>
        <version>1.0-SNAPSHOT</version>
    </parent>
    <modelVersion>4.0.0</modelVersion>

    <artifactId>mmath-crawler-slave</artifactId>

    <properties>
        <java.version>1.8</java.version>
        <project.build.scriptSourceDirectory>startup-scripts</project.build.scriptSourceDirectory>
        <docker.image.name>gonzague/mmath-crawler</docker.image.name>
        <docker.skip.push>true</docker.skip.push>
        <docker.skip>false</docker.skip>
    </properties>

    <dependencies>

        <dependency>
            <groupId>com.ftpix</groupId>
            <artifactId>build-spring</artifactId>
            <version>${project.version}</version>
            <type>pom</type>
        </dependency>

        <dependency>
            <groupId>com.ftpix</groupId>
            <artifactId>build-spark</artifactId>
            <version>${project.version}</version>
            <type>pom</type>
        </dependency>

        <dependency>
            <groupId>com.ftpix</groupId>
            <artifactId>domain-dao</artifactId>
            <version>${project.version}</version>
        </dependency>

        <dependency>
            <groupId>com.ftpix</groupId>
            <artifactId>domain-model</artifactId>
            <version>${project.version}</version>
        </dependency>

        <dependency>
            <groupId>com.ftpix</groupId>
            <artifactId>build-quartz</artifactId>
            <version>${project.version}</version>
            <type>pom</type>
        </dependency>

        <dependency>
            <groupId>com.ftpix</groupId>
            <artifactId>mmath-config</artifactId>
            <version>${project.version}</version>
        </dependency>

        <dependency>
            <groupId>com.ftpix</groupId>
            <artifactId>build-logs</artifactId>
            <version>${project.version}</version>
            <type>pom</type>
        </dependency>


    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <configuration>
                    <source>1.8</source>
                    <target>1.8</target>
                </configuration>
            </plugin>


            <!-- Assembly -->

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-shade-plugin</artifactId>
                <version>2.3</version>
                <executions>
                    <!-- Run shade goal on package phase -->
                    <execution>
                        <phase>package</phase>
                        <goals>
                            <goal>shade</goal>
                        </goals>
                        <configuration>
                            <transformers>
                                <transformer implementation="org.apache.maven.plugins.shade.resource.ServicesResourceTransformer"/>
                                <!-- add Main-Class to manifest file -->
                                <transformer implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
                                    <mainClass>com.ftpix.mmath.cacheslave.Application</mainClass>
                                </transformer>
                            </transformers>
                        </configuration>
                    </execution>
                </executions>
            </plugin>



            <!-- DOCKER -->
            <plugin>
                <artifactId>maven-resources-plugin</artifactId>
                <version>3.0.2</version>
                <executions>
                    <execution>

                        <id>copy-resources</id>
                        <!-- here the phase you need -->
                        <phase>package</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${basedir}/target/docker</outputDirectory>
                            <resources>
                                <resource>
                                    <directory>docker</directory>
                                    <filtering>true</filtering>
                                </resource>
                                <resource>
                                    <directory>${basedir}/target</directory>
                                    <includes>
                                        <include>${project.artifactId}-${project.version}.jar</include>
                                    </includes>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>exec-maven-plugin</artifactId>
                <version>1.6.0</version>
                <configuration>
                    <workingDirectory>${basedir}/src/main/web</workingDirectory>
                </configuration>
                <executions>
                    <!-- BUILD DOCKER IMAGE -->
                    <execution>
                        <id>Docker build</id>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <phase>install</phase>
                        <configuration>
                            <skip>${docker.skip}</skip>
                            <workingDirectory>${basedir}/target/docker</workingDirectory>
                            <executable>docker</executable>
                            <arguments>
                                <argument>build</argument>
                                <argument>-t</argument>
                                <argument>${docker.image.name}</argument>
                                <argument>.</argument>
                            </arguments>
                        </configuration>
                    </execution>
                    <execution>
                        <id>Docker push</id>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <phase>install</phase>
                        <configuration>
                            <skip>${docker.skip.push}</skip>
                            <workingDirectory>${basedir}/target/docker</workingDirectory>
                            <executable>docker</executable>
                            <arguments>
                                <argument>push</argument>
                                <argument>${docker.image.name}</argument>
                            </arguments>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

        </plugins>
    </build>

</project>